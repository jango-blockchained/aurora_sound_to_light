[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "aurora_sound_to_light"
version = "1.0.0"
description = "Home Assistant integration for music-reactive lighting"
requires-python = ">=3.9"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: AsyncIO",
    "Topic :: Home Automation"
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = "\\.pyi?$"
extend-exclude = """
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/tests/fixtures/
"""

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["custom_components.aurora_sound_to_light"]
known_third_party = ["homeassistant"]

[tool.pylint.MASTER]
ignore = ["CVS", ".git", ".hg", ".tox", ".venv", "venv"]
persistent = "yes"
jobs = 0
unsafe-load-any-extension = "no"
extension-pkg-whitelist = []

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring"
]

[tool.pylint.REPORTS]
output-format = "text"
reports = "no"
evaluation = "10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)"

[tool.pylint.FORMAT]
max-line-length = 88
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
single-line-if-stmt = "no"
single-line-class-stmt = "no"
max-module-lines = 2000

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false 