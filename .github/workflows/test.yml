name: Test Suite

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run Frontend Tests
        run: npm test
      
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: frontend
          files: ./coverage/lcov.info
          name: Frontend Coverage
          fail_ci_if_error: true

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        ha-version: ['2023.8.0', 'latest']
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements_test.txt
          pip install homeassistant==${{ matrix.ha-version }}
      
      - name: Run Integration Tests
        run: |
          pytest tests/integration/ \
            --cov=custom_components.aurora_sound_to_light \
            --cov-report=xml \
            --cov-report=term-missing
      
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: integration-py${{ matrix.python-version }}-ha${{ matrix.ha-version }}
          files: ./coverage.xml
          name: Integration Coverage (Python ${{ matrix.python-version }}, HA ${{ matrix.ha-version }})
          fail_ci_if_error: true

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint black isort mypy
      
      - name: Run Black
        run: black --check .
      
      - name: Run isort
        run: isort --check-only --diff .
      
      - name: Run Pylint
        run: pylint custom_components tests
      
      - name: Run MyPy
        run: mypy custom_components tests

  validate-hassfest:
    name: Validate with Hassfest
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Hassfest Validation
        uses: home-assistant/actions/hassfest@master

  validate-hacs:
    name: Validate with HACS
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: HACS Validation
        uses: hacs/action@main
        with:
          category: integration 